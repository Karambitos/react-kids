{"version":3,"file":"static/js/767.5ce4b9d7.chunk.js","mappings":"gKACA,MAA0B,6BAA1B,EAA+D,2BAA/D,EAAkG,2BAAlG,EAAuI,6BAAvI,EAA6K,4B,8DCEhKA,EAAc,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAC5B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeH,SAAA,EAC7BI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBF,UAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaH,SAAA,EAC3BI,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,EAAaH,UAC3BI,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAOC,IAAI,aAAaC,MAAM,MAAMC,OAAO,UAEtDT,QAGLC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeH,SAAA,EAC7BI,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,KAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAWC,SAIxB,E,oBC3BA,GAAgB,YAAc,8BAA8B,KAAO,uBAAuB,SAAW,2BAA2B,OAAS,0B,uCCK1H,SAASO,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAoBC,EAAAA,EAAAA,MAASC,MAAM,CACvCC,OAAOC,EAAAA,EAAAA,MACJC,SAAS,wBACTF,MAAM,wBACTG,UAAUF,EAAAA,EAAAA,MAASC,SAAS,cAO9B,OACEd,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAApB,UACEI,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CACLC,cAAe,CACbN,MAAO,GACPG,SAAU,IAEZI,gBAAc,EACdC,iBAAkBX,EAClBY,SAbe,SAAAC,GACnBf,GAASgB,EAAAA,EAAAA,IAAUD,GACrB,EAW6B1B,SAEtB,SAAAD,GAAA,IAAG6B,EAAM7B,EAAN6B,OAAQC,EAAO9B,EAAP8B,QAAO,OACjB5B,EAAAA,EAAAA,MAAC6B,EAAAA,GAAI,CAAA9B,SAAA,EACHC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,YAAY,sBAE9CN,EAAOZ,OAASa,EAAQb,OAAQZ,EAAAA,EAAAA,KAAA,OAAAJ,SAAM4B,EAAOZ,QAAe,MAC7Df,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,aAELI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJE,KAAK,WACLD,KAAK,WACLE,YAAY,qBAGfN,EAAOT,UAAYU,EAAQV,UAC1Bf,EAAAA,EAAAA,KAAA,OAAAJ,SAAM4B,EAAOT,WACX,MACJf,EAAAA,EAAAA,KAAA,UAAQ4B,KAAK,SAAQhC,SAAC,aACjB,KAKjB,CCjDe,SAASU,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAoBC,EAAAA,EAAAA,MAASC,MAAM,CACvCC,OAAOC,EAAAA,EAAAA,MACJC,SAAS,wBACTF,MAAM,wBACTG,UAAUF,EAAAA,EAAAA,MAASkB,IAAI,EAAG,cAAcjB,SAAS,YACjDkB,iBAAiBnB,EAAAA,EAAAA,MACdC,SAAS,gCACTmB,MAAM,EAACC,EAAAA,EAAAA,IAAI,aAAc,4BAY9B,OACElC,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAApB,UACEI,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CACLC,cAAe,CACbN,MAAO,GACPG,SAAU,GACViB,gBAAiB,IAEnBb,gBAAc,EACdC,iBAAkBX,EAClBY,SAnBe,SAAAC,GACnBf,GACE4B,EAAAA,EAAAA,IAAa,CACXvB,MAAOU,EAAOV,MACdG,SAAUO,EAAOP,WAGvB,EAY6BnB,SAEtB,SAAAD,GAAA,IAAG6B,EAAM7B,EAAN6B,OAAQC,EAAO9B,EAAP8B,QAAO,OACjB5B,EAAAA,EAAAA,MAAC6B,EAAAA,GAAI,CAAA9B,SAAA,EACHC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,YAAY,sBAE9CN,EAAOZ,OAASa,EAAQb,OAAQZ,EAAAA,EAAAA,KAAA,OAAAJ,SAAM4B,EAAOZ,QAAe,MAC7Df,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,aAELI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJE,KAAK,WACLD,KAAK,WACLE,YAAY,qBAGfN,EAAOT,UAAYU,EAAQV,UAC1Bf,EAAAA,EAAAA,KAAA,OAAAJ,SAAM4B,EAAOT,WACX,MACJlB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,qBAELI,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJE,KAAK,kBACLD,KAAK,WACLE,YAAY,6BAGfN,EAAOQ,iBAAmBP,EAAQO,iBACjChC,EAAAA,EAAAA,KAAA,OAAAJ,SAAM4B,EAAOQ,kBACX,MACJhC,EAAAA,EAAAA,KAAA,UAAQ4B,KAAK,SAAQhC,SAAC,aACjB,KAKjB,CCtEO,IAAMwC,EAAW,WACtB,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAO1B,OACE1C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,YAAmBH,SAAA,EACjCI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,8CACJC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,KAAYH,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,MAAaH,SAAA,EAC7BI,EAAAA,EAAAA,KAAA,SACE4B,KAAK,WACLa,QAASA,EACTE,QAbS,WAEjB,OADAD,GAAYD,GACLA,CACT,EAWU3C,UAAU,kBACV8C,UAAQ,KAEV/C,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAA+C,OAAK9C,EAAAA,SAAe,KAAA8C,OAAIJ,EAAU1C,EAAAA,OAAgB,IAAKH,SAAA,EACnEI,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,UAAY,KAACI,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,mBAG5B6C,GAAUzC,EAAAA,EAAAA,KAAC8C,EAAK,KAAM9C,EAAAA,EAAAA,KAACM,EAAQ,SAIxC,ECbA,EAdiB,WAOf,OACEN,EAAAA,EAAAA,KAACN,EAAW,CAAAE,UACVI,EAAAA,EAAAA,KAACoC,EAAQ,KAGf,C","sources":["webpack://react-qa-test/./src/components/AuthWrapper/AuthWrapper.module.scss?ae34","components/AuthWrapper/AuthWrapper.jsx","webpack://react-qa-test/./src/components/AuthForm/AuthForm.module.scss?60aa","components/AuthForm/LoginForm/LoginForm.jsx","components/AuthForm/RegisterForm/RegisterForm.jsx","components/AuthForm/AuthForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AuthWrapper_wrapper__Kc24W\",\"inner\":\"AuthWrapper_inner__ZrjbZ\",\"image\":\"AuthWrapper_image__wVrEb\",\"bubbles\":\"AuthWrapper_bubbles__PMbcp\",\"bubble\":\"AuthWrapper_bubble__dYNeh\",\"floating\":\"AuthWrapper_floating__Q6l+r\"};","import styles from './AuthWrapper.module.scss';\nimport Image from '../../assets/image.png';\n\nexport const AuthWrapper = ({ children }) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className=\"contentMaxWidth\">\n        <div className={styles.inner}>\n          <div className={styles.image}>\n            <img src={Image} alt=\"Main image\" width=\"540\" height=\"500\" />\n          </div>\n          {children}\n        </div>\n      </div>\n      <div className={styles.bubbles}>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n        <div className={styles.bubble}></div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"AuthForm_formWrapper__mx8U1\",\"form\":\"AuthForm_form__kV4hH\",\"checkbox\":\"AuthForm_checkbox__OF7Hm\",\"active\":\"AuthForm_active__SielJ\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\nimport { object, string, ref } from 'yup';\nimport { loginUser } from '../../../redux/auth/operations';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n\n  const validationsSchema = object().shape({\n    email: string()\n      .required('Valid email required')\n      .email('Valid email required'),\n    password: string().required('Required'),\n  });\n\n  const handleSubmit = values => {\n    dispatch(loginUser(values));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validateOnBlur\n        validationSchema={validationsSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <label>\n              Email\n              <Field type=\"email\" name=\"email\" placeholder=\"your@email.com\" />\n            </label>\n            {errors.email && touched.email ? <div>{errors.email}</div> : null}\n            <label>\n              Password:\n              <Field\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"your password\"\n              />\n            </label>\n            {errors.password && touched.password ? (\n              <div>{errors.password}</div>\n            ) : null}\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\nimport { object, string, ref } from 'yup';\nimport { registerUser } from '../../../redux/auth/operations';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n\n  const validationsSchema = object().shape({\n    email: string()\n      .required('Valid email required')\n      .email('Valid email required'),\n    password: string().min(8, 'Too Short!').required('Required'),\n    confirmPassword: string()\n      .required('Please confirm your password')\n      .oneOf([ref('password')], 'Passwords do not match'),\n  });\n\n  const handleSubmit = values => {\n    dispatch(\n      registerUser({\n        email: values.email,\n        password: values.password,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        validateOnBlur\n        validationSchema={validationsSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <label>\n              Email\n              <Field type=\"email\" name=\"email\" placeholder=\"your@email.com\" />\n            </label>\n            {errors.email && touched.email ? <div>{errors.email}</div> : null}\n            <label>\n              Password:\n              <Field\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"your password\"\n              />\n            </label>\n            {errors.password && touched.password ? (\n              <div>{errors.password}</div>\n            ) : null}\n            <label>\n              Confirm Password:\n              <Field\n                name=\"confirmPassword\"\n                type=\"password\"\n                placeholder=\"confirm your password\"\n              />\n            </label>\n            {errors.confirmPassword && touched.confirmPassword ? (\n              <div>{errors.confirmPassword}</div>\n            ) : null}\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport styles from './AuthForm.module.scss';\nimport Login from './LoginForm/LoginForm';\nimport Register from './RegisterForm/RegisterForm';\n\nexport const AuthForm = () => {\n  const [checked, setChecked] = useState(true);\n\n  const handlClick = () => {\n    setChecked(!checked);\n    return checked;\n  };\n\n  return (\n    <div className={styles.formWrapper}>\n      <h2>Do your homework, get some great prizes!</h2>\n      <div className={styles.form}>\n        <label className={styles.label}>\n          <input\n            type=\"checkbox\"\n            checked={checked}\n            onClick={handlClick}\n            className=\"visually-hidden\"\n            readOnly\n          />\n          <div className={`${styles.checkbox} ${checked ? styles.active : ''}`}>\n            <span>Login</span>/<span>Register</span>\n          </div>\n        </label>\n        {checked ? <Login /> : <Register />}\n      </div>\n    </div>\n  );\n};\n","import { AuthWrapper } from '../components/AuthWrapper/AuthWrapper';\nimport { AuthForm } from '../components/AuthForm/AuthForm';\n\n// import { useDispatch } from 'react-redux';\n// import { loginUser } from 'redux/auth/authThunks';\n\nconst AuthPage = () => {\n  // const dispatch = useDispatch();\n\n  // const handleSubmit = form => {\n  //   dispatch(loginUser(form));\n  // };\n\n  return (\n    <AuthWrapper>\n      <AuthForm />\n    </AuthWrapper>\n  );\n};\n\nexport default AuthPage;\n"],"names":["AuthWrapper","_ref","children","_jsxs","className","styles","_jsx","src","Image","alt","width","height","Register","dispatch","useDispatch","validationsSchema","object","shape","email","string","required","password","_Fragment","Formik","initialValues","validateOnBlur","validationSchema","onSubmit","values","loginUser","errors","touched","Form","Field","type","name","placeholder","min","confirmPassword","oneOf","ref","registerUser","AuthForm","_useState","useState","_useState2","_slicedToArray","checked","setChecked","onClick","readOnly","concat","Login"],"sourceRoot":""}