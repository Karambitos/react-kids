{"version":3,"file":"static/js/3.d08d8d21.chunk.js","mappings":"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","sources":["webpack://react-qa-test/./src/components/ProgressBar/ProgressBar.module.scss?9d2c","components/ProgressBar/ProgressBar.jsx","components/WeekTabContent/WeekTabContent.jsx","webpack://react-qa-test/./src/components/WeekTabs/WeekTabs.module.scss?0dd7","components/WeekTabs/WeekTabs.jsx","webpack://react-qa-test/./src/components/CardListPlaceholder/CardListPlaceholder.module.scss?144e","components/CardListPlaceholder/CardListPlaceholder.jsx","pages/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProgressBar_wrapper__2q-FW\",\"currentDayWrapper\":\"ProgressBar_currentDayWrapper__3Qby0\",\"currentDay\":\"ProgressBar_currentDay__09F9o\",\"infoWrapper\":\"ProgressBar_infoWrapper__UC1XU\",\"progressBar\":\"ProgressBar_progressBar__8d4AF\",\"progressBarData\":\"ProgressBar_progressBarData__ffvRN\"};","import { useSelector } from 'react-redux';\nimport { getBalance, getRewards } from '../../redux/auth/selectors';\nimport styles from './ProgressBar.module.scss';\nimport { AnimatedLineProgressBar } from '@frogress/line';\nimport { getCurrentDate, getCurrentDayName } from '../../redux/tasks/selectors';\n\nexport default function ProgressBar() {\n  const { rewardsGained, rewardsPlanned } = useSelector(getRewards);\n  const currentDate = useSelector(getCurrentDate);\n  const currentDayName = useSelector(getCurrentDayName);\n  const balance = useSelector(getBalance);\n  const percent = (rewardsGained / rewardsPlanned) * 100;\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.currentDayWrapper}>\n        My tasks:\n        <span className={styles.currentDay}>\n          {currentDayName && <span>{currentDayName}, </span>}\n          {currentDate.split('-').reverse().join('-')}\n        </span>\n      </div>\n      <div className={styles.infoWrapper}>\n        <p>\n          Total balance: <span>{balance}</span>\n        </p>\n        <p>\n          Points earned this week: <span>{rewardsGained}</span>\n        </p>\n        <p>\n          Points planned for this week: <span>{rewardsPlanned}</span>\n        </p>\n        {percent != NaN && (\n          <div className={styles.progressBar}>\n            <span className={styles.progressBarData}>\n              <span>{rewardsGained}</span>/<span>{rewardsPlanned}</span>\n            </span>\n            <AnimatedLineProgressBar\n              percent={(rewardsGained / rewardsPlanned) * 100}\n              rounded={6}\n              height={6}\n              progressColor=\"#9ECB44\"\n              containerColor=\"#E0E0E0\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import styles from './WeekTabContent.module.scss';\n\nexport default function WeekTabContent({ children }) {\n  return <div className=\"main\">{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dayList\":\"WeekTabs_dayList__jvNtW\",\"dayItem\":\"WeekTabs_dayItem__UGp9l\",\"active\":\"WeekTabs_active__hDc5z\",\"dayButton\":\"WeekTabs_dayButton__mDpDR\"};","import { getCurrentDate, getWeekDates } from '../../redux/tasks/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport styles from './WeekTabs.module.scss';\nimport { switchDate } from '../../redux/tasks/slice';\n\nexport default function WeekTabs() {\n  const currentDate = useSelector(getCurrentDate);\n  const weekDates = useSelector(getWeekDates);\n  const dispatch = useDispatch();\n\n  const handleClick = date => {\n    dispatch(switchDate(date));\n  };\n\n  const isMobile = useMediaQuery({\n    query: '(max-width: 1024px)',\n  });\n\n  return (\n    <div className=\"aside\">\n      <ul className={styles.dayList}>\n        {weekDates.map(({ day, date }, index) => {\n          return (\n            <li\n              className={\n                currentDate === date\n                  ? `${styles.active} ${styles.dayItem}`\n                  : `${styles.dayItem}`\n              }\n              key={index}\n            >\n              <button\n                className={styles.dayButton}\n                onClick={() => handleClick(date)}\n              >\n                {isMobile ? day.slice(0, 2) : day}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardListPlaceholder_wrapper__EfFUF\",\"inner\":\"CardListPlaceholder_inner__7dXeL\",\"image\":\"CardListPlaceholder_image__FpJy9\",\"button\":\"CardListPlaceholder_button__Cvd8P\"};","import BG from '../../assets/bg.png';\nimport { Link } from 'react-router-dom';\nimport styles from './CardListPlaceholder.module.scss';\nimport { useSelector } from 'react-redux';\nimport { getCurrentDate } from '../../redux/tasks/selectors';\n\nexport default function CardListPlaceholder() {\n  const currentDate = useSelector(getCurrentDate);\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.inner}>\n        <h2>No tasks on this day</h2>\n        {!(currentDate < new Date().toJSON().slice(0, 10)) && (\n          <Link to=\"/planning\" className={styles.button}>\n            Schedule tasks\n          </Link>\n        )}\n      </div>\n      <div className={styles.image}>\n        <img src={BG} alt=\"Alt text\" />\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport CardList from '../components/CardList/CardList';\nimport WeekTabContent from '../components/WeekTabContent/WeekTabContent';\nimport WeekTabs from '../components/WeekTabs/WeekTabs';\n\nimport { getCurrentDate, getFilterTasks } from '../redux/tasks/selectors';\nimport { useSelector } from 'react-redux';\nimport CardListPlaceholder from '../components/CardListPlaceholder/CardListPlaceholder';\nimport ProgressBar from '../components/ProgressBar/ProgressBar';\n\nconst Home = () => {\n  const currentDate = useSelector(getCurrentDate);\n  const filteredTasks = useSelector(getFilterTasks);\n  return (\n    <div className=\"asideWrapper contentMaxWidth\">\n      <WeekTabs currentDate={currentDate} />\n      <WeekTabContent>\n        <ProgressBar />\n        {filteredTasks.length > 0 ? (\n          <CardList items={filteredTasks} />\n        ) : (\n          <CardListPlaceholder />\n        )}\n      </WeekTabContent>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["ProgressBar","_useSelector","useSelector","getRewards","rewardsGained","rewardsPlanned","currentDate","getCurrentDate","currentDayName","getCurrentDayName","balance","getBalance","percent","_jsxs","className","styles","children","split","reverse","join","_jsx","NaN","AnimatedLineProgressBar","rounded","height","progressColor","containerColor","WeekTabContent","_ref","WeekTabs","weekDates","getWeekDates","dispatch","useDispatch","isMobile","useMediaQuery","query","map","index","day","date","concat","onClick","switchDate","handleClick","slice","CardListPlaceholder","Date","toJSON","Link","to","src","BG","alt","filteredTasks","getFilterTasks","length","CardList","items"],"sourceRoot":""}