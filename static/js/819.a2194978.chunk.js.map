{"version":3,"file":"static/js/819.a2194978.chunk.js","mappings":"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","sources":["webpack://react-qa-test/./src/components/Checkbox/Checkbox.module.scss?48bb","assets/check.jsx","assets/exclamation.jsx","components/Checkbox/Checkbox.jsx","webpack://react-qa-test/./src/components/CardListItem/DaysList/DaysList.module.scss?5fe7","components/CardListItem/DaysList/DaysList.jsx","webpack://react-qa-test/./src/components/CardListItem/CardListItem.module.scss?4ff0","components/CardListItem/CardListItem.jsx","webpack://react-qa-test/./src/components/CardList/CardList.module.scss?8d63","components/CardList/CardList.jsx","webpack://react-qa-test/./src/components/ProgressBar/ProgressBar.module.scss?9d2c","components/ProgressBar/ProgressBar.jsx","redux/gift/selectors.js","redux/tasks/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Checkbox_label__O-SB1\",\"checkbox\":\"Checkbox_checkbox__71xI9\",\"disabled\":\"Checkbox_disabled__h5VEk\",\"checkboxCircle\":\"Checkbox_checkboxCircle__4JcQj\",\"iconCheck\":\"Checkbox_iconCheck__kwiu9\",\"iconExclamation\":\"Checkbox_iconExclamation__0swWW\",\"active\":\"Checkbox_active__r+IRf\"};","import * as React from 'react';\nconst SVGCheck = props => (\n  <svg\n    width=\"18px\"\n    height=\"18px\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    {...props}\n  >\n    <title>{'check_fill'}</title>\n    <g\n      id=\"\\u9875\\u9762-1\"\n      stroke=\"none\"\n      strokeWidth={1}\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <g id=\"System\" transform=\"translate(-192.000000, -48.000000)\">\n        <g id=\"check_fill\" transform=\"translate(192.000000, 48.000000)\">\n          <path\n            d=\"M24,0 L24,24 L0,24 L0,0 L24,0 Z M12.5934901,23.257841 L12.5819402,23.2595131 L12.5108777,23.2950439 L12.4918791,23.2987469 L12.4918791,23.2987469 L12.4767152,23.2950439 L12.4056548,23.2595131 C12.3958229,23.2563662 12.3870493,23.2590235 12.3821421,23.2649074 L12.3780323,23.275831 L12.360941,23.7031097 L12.3658947,23.7234994 L12.3769048,23.7357139 L12.4804777,23.8096931 L12.4953491,23.8136134 L12.4953491,23.8136134 L12.5071152,23.8096931 L12.6106902,23.7357139 L12.6232938,23.7196733 L12.6232938,23.7196733 L12.6266527,23.7031097 L12.609561,23.275831 C12.6075724,23.2657013 12.6010112,23.2592993 12.5934901,23.257841 L12.5934901,23.257841 Z M12.8583906,23.1452862 L12.8445485,23.1473072 L12.6598443,23.2396597 L12.6498822,23.2499052 L12.6498822,23.2499052 L12.6471943,23.2611114 L12.6650943,23.6906389 L12.6699349,23.7034178 L12.6699349,23.7034178 L12.678386,23.7104931 L12.8793402,23.8032389 C12.8914285,23.8068999 12.9022333,23.8029875 12.9078286,23.7952264 L12.9118235,23.7811639 L12.8776777,23.1665331 C12.8752882,23.1545897 12.8674102,23.1470016 12.8583906,23.1452862 L12.8583906,23.1452862 Z M12.1430473,23.1473072 C12.1332178,23.1423925 12.1221763,23.1452606 12.1156365,23.1525954 L12.1099173,23.1665331 L12.0757714,23.7811639 C12.0751323,23.7926639 12.0828099,23.8018602 12.0926481,23.8045676 L12.108256,23.8032389 L12.3092106,23.7104931 L12.3186497,23.7024347 L12.3186497,23.7024347 L12.3225043,23.6906389 L12.340401,23.2611114 L12.337245,23.2485176 L12.337245,23.2485176 L12.3277531,23.2396597 L12.1430473,23.1473072 Z\"\n            id=\"MingCute\"\n            fillRule=\"nonzero\"\n          />\n          <path\n            d=\"M21.5456,5.11107 C22.1314,5.69686 22.1314,6.6466 21.5456,7.23239 L10.3026,18.4754 C9.6778,19.1002 8.66474,19.1002 8.0399,18.4754 L2.45376,12.8892 C1.86797,12.3035 1.86797,11.3537 2.45376,10.7679 C3.03954,10.1821 3.98929,10.1821 4.57508,10.7679 L9.17127,15.3641 L19.4243,5.11107 C20.0101,4.52528 20.9599,4.52528 21.5456,5.11107 Z\"\n            id=\"\\u8DEF\\u5F84\"\n            fill=\"#fff\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\nexport default SVGCheck;\n","import * as React from 'react';\nconst SVGExclamation = props => (\n  <svg\n    width=\"12px\"\n    height=\"12px\"\n    viewBox=\"0 0 16 16\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    {...props}\n  >\n    <path fill=\"#fff\" d=\"M6 0h4v4l-1 7h-2l-1-7z\" />\n    <path\n      fill=\"#fff\"\n      d=\"M10 14c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z\"\n    />\n  </svg>\n);\nexport default SVGExclamation;\n","import styles from './Checkbox.module.scss';\nimport SVGCheck from '../../assets/check';\nimport SVGExclamation from '../../assets/exclamation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCurrentDate, getIsLoading } from '../../redux/tasks/selectors';\nimport { switchProgress } from '../../redux/tasks/operations';\nimport { getBalance } from '../../redux/auth/selectors';\nimport { updateGifts } from '../../redux/gift/slice';\n\nexport default function Checkbox({ checked, id = false, page, points }) {\n  const dispatch = useDispatch();\n  const currentDate = useSelector(getCurrentDate);\n  const balanse = useSelector(getBalance);\n  const isLoading = useSelector(getIsLoading);\n\n  const handleCheckboxChange = e => {\n    const itemId = id;\n    const credentials = {\n      date: {\n        date: currentDate,\n      },\n      id: itemId,\n    };\n    if (page === 'awards') {\n      dispatch(updateGifts({ itemId, balanse }));\n    } else {\n      dispatch(switchProgress(credentials));\n    }\n  };\n\n  return (\n    <label className={styles.label}>\n      <input\n        type=\"checkbox\"\n        disabled={isLoading}\n        checked={checked}\n        onClick={e => handleCheckboxChange(e)}\n        className=\"visually-hidden\"\n        readOnly\n      />\n      <div\n        className={`${styles.checkbox} ${checked ? styles.active : ''} ${\n          isLoading && styles.disabled\n        }`}\n      >\n        <span className={styles.iconCheck}>\n          <SVGCheck />\n        </span>\n        <span className={styles.iconExclamation}>\n          <SVGExclamation />\n        </span>\n        <div className={styles.checkboxCircle}></div>\n      </div>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"daysList\":\"DaysList_daysList__3ufUc\",\"isShow\":\"DaysList_isShow__9GOnU\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeTask } from '../../../redux/tasks/operations';\nimport { getIsLoading, getWeekDates } from '../../../redux/tasks/selectors';\nimport styles from './DaysList.module.scss';\n\nexport default function DaysList({ task, taskId, isShow }) {\n  const weekDates = useSelector(getWeekDates);\n  const isLoading = useSelector(getIsLoading);\n\n  const dispatch = useDispatch();\n\n  const handleChange = (task, index) => {\n    const dayId = task[index]._id;\n    const data = [];\n    task.forEach(item => {\n      item._id === dayId ? data.push(!item.isActive) : data.push(item.isActive);\n    });\n    const days = { days: data };\n    dispatch(activeTask({ days, taskId }));\n  };\n\n  return (\n    <form className={`${styles.daysList} ${isShow ? styles.isShow : ''}`}>\n      <ul>\n        {weekDates.map(({ day, date }, index) => {\n          return (\n            <li key={index} id={date}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  disabled={\n                    date < new Date().toJSON().slice(0, 10) || isLoading\n                  }\n                  checked={task[index].isActive}\n                  onChange={() => handleChange(task, index)}\n                />\n                {day.slice(0, 2)}\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"CardListItem_cardItem__M2YPM\",\"cardItemImage\":\"CardListItem_cardItemImage__JAY21\",\"cardItemContent\":\"CardListItem_cardItemContent__6FFNT\",\"cardItemTitle\":\"CardListItem_cardItemTitle__Oqo1P\",\"cardStatus\":\"CardListItem_cardStatus__Jawzz\",\"isCompleted\":\"CardListItem_isCompleted__QPyHH\",\"daysListBTN\":\"CardListItem_daysListBTN__xnYdK\",\"isShow\":\"CardListItem_isShow__cgEt3\",\"points\":\"CardListItem_points__AjDb4\"};","import React, { useState } from 'react';\nimport Checkbox from '../Checkbox/Checkbox';\nimport { useSelector } from 'react-redux';\nimport { getCurrentDate } from '../../redux/tasks/selectors';\nimport DaysList from './DaysList/DaysList';\nimport styles from './CardListItem.module.scss';\nimport Image from '../../assets/placeholder.png';\nimport SVGCheck from '../../assets/check';\nimport SVGExclamation from '../../assets/exclamation';\nimport { getLastGiftBuy } from '../../redux/gift/selectors';\n\nexport default function CardListItem({ item, page }) {\n  const [isShow, setIsShow] = useState(false);\n  const img = item.imageUrl ? item.imageUrl : Image;\n  const currentDate = useSelector(getCurrentDate);\n  const lastGiftBuy = useSelector(getLastGiftBuy);\n  const currentDateGlobal = new Date().toJSON().slice(0, 10);\n  const dayBefore = currentDate < currentDateGlobal;\n\n  const checked =\n    page === 'home'\n      ? !!item.days?.find(day => day.date === currentDate && day.isCompleted)\n      : item.isSelected;\n\n  const handleOpenCheckbox = () => {\n    setIsShow(!isShow);\n  };\n  const points = item.reward ? item.reward : item.price;\n\n  return (\n    <>\n      <li className={`${styles.cardItem} ${dayBefore ? styles.disabled : ''}`}>\n        <img className={styles.cardItemImage} src={img} alt={item.title} />\n        <div className={styles.cardItemContent}>\n          <div className={styles.cardItemTitle}>\n            <p>{item.title}</p>\n            <span className={styles.points}>\n              {points} {points > 1 ? ' points' : ' point'}\n            </span>\n          </div>\n          {page === 'home' && dayBefore && (\n            <span\n              className={`${styles.cardStatus} ${\n                checked ? styles.isCompleted : ''\n              }`}\n            >\n              {checked ? <SVGCheck /> : <SVGExclamation />}\n            </span>\n          )}\n          {page === 'home' &&\n            currentDateGlobal === currentDate &&\n            (currentDateGlobal === lastGiftBuy && checked ? (\n              <span className={`${styles.cardStatus} ${styles.isCompleted}`}>\n                <SVGCheck />\n              </span>\n            ) : (\n              <>\n                <Checkbox checked={checked} id={item._id} />\n              </>\n            ))}\n          {page === 'planning' && (\n            <>\n              <button\n                className={`${styles.daysListBTN} ${\n                  isShow ? styles.isShow : ''\n                }`}\n                onClick={handleOpenCheckbox}\n              ></button>\n              <DaysList isShow={isShow} task={item.days} taskId={item._id} />\n            </>\n          )}\n          {page === 'awards' && (\n            <>\n              <Checkbox\n                checked={checked}\n                id={item._id ?? item.id}\n                page={page}\n              />\n            </>\n          )}\n        </div>\n      </li>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"CardList_cardList__6vgyO\"};","import CardListItem from '../CardListItem/CardListItem';\nimport styles from './CardList.module.scss';\nimport Loader from '../Loader/Loader';\n\nexport default function CardList({ items, page = 'home' }) {\n  return (\n    <>\n      {!items ? (\n        <Loader />\n      ) : (\n        <ul className={styles.cardList}>\n          {items &&\n            items.map(item => {\n              return (\n                <CardListItem\n                  key={item._id ?? item.id}\n                  item={item}\n                  page={page}\n                />\n              );\n            })}\n        </ul>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProgressBar_wrapper__2q-FW\",\"currentDayWrapper\":\"ProgressBar_currentDayWrapper__3Qby0\",\"currentDay\":\"ProgressBar_currentDay__09F9o\",\"infoWrapper\":\"ProgressBar_infoWrapper__UC1XU\",\"progressBar\":\"ProgressBar_progressBar__8d4AF\",\"progressBarData\":\"ProgressBar_progressBarData__ffvRN\"};","import { useSelector } from 'react-redux';\nimport { getBalance, getRewards } from '../../redux/auth/selectors';\nimport styles from './ProgressBar.module.scss';\nimport { AnimatedLineProgressBar } from '@frogress/line';\nimport { getCurrentDate, getCurrentDayName } from '../../redux/tasks/selectors';\n\nexport default function ProgressBar() {\n  const { rewardsGained, rewardsPlanned } = useSelector(getRewards);\n  const currentDate = useSelector(getCurrentDate);\n  const currentDayName = useSelector(getCurrentDayName);\n  const balance = useSelector(getBalance);\n  const percent = (rewardsGained / rewardsPlanned) * 100;\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.currentDayWrapper}>\n        My tasks:\n        <span className={styles.currentDay}>\n          {currentDayName && <span>{currentDayName}, </span>}\n          {currentDate.split('-').reverse().join('-')}\n        </span>\n      </div>\n      <div className={styles.infoWrapper}>\n        <p>\n          Total balance: <span>{balance}</span>\n        </p>\n        <p>\n          Points earned this week: <span>{rewardsGained}</span>\n        </p>\n        <p>\n          Points planned for this week: <span>{rewardsPlanned}</span>\n        </p>\n        {!isNaN(percent) && (\n          <div className={styles.progressBar}>\n            <span className={styles.progressBarData}>\n              <span>{rewardsGained}</span>/<span>{rewardsPlanned}</span>\n            </span>\n            <AnimatedLineProgressBar\n              percent={(rewardsGained / rewardsPlanned) * 100}\n              rounded={6}\n              height={6}\n              progressColor=\"#9ECB44\"\n              containerColor=\"#E0E0E0\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getGiftsList = state => state.gifts.gifts;\nexport const getLastGiftBuy = state => state.gifts.lastGiftBuy;\n\nexport const getModal = state => state.gifts.modalShow;\n\nexport const getFilterGiftsList = createSelector(\n  [state => state.gifts.gifts, state => state.gifts.purchasedGiftIds],\n  (gifts, giftIds) => {\n    return gifts.filter(item => giftIds.includes(item.id));\n  }\n);\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getTasks = state => state.tasks.taskList;\nexport const getIsLoading = state => state.tasks.isLoading;\nexport const getWeekDates = state => state.tasks.weekDates;\nexport const getCurrentDate = state => state.tasks.currentDate;\nexport const getStartWeekDate = state => state.tasks.startWeekDate;\nexport const getFilterTasks = createSelector(\n  [state => state.tasks.taskList, state => state.tasks.currentDate],\n  (items, currentDate) => {\n    return items.filter(obj => {\n      const matchingDay = obj.days.find(\n        day => day.date === currentDate && day.isActive\n      );\n      return !!matchingDay;\n    });\n  }\n);\nexport const getCurrentDayName = createSelector(\n  [state => state.tasks.currentDate, state => state.tasks.weekDates],\n  (currentDate, weekDates) => {\n    if (weekDates.length > 0) {\n      const currentDay = weekDates.find(day => day.date === currentDate);\n      return currentDay.day;\n    }\n  }\n);\n"],"names":["props","_jsxs","_objectSpread","width","height","viewBox","xmlns","xmlnsXlink","children","_jsx","id","stroke","strokeWidth","fill","fillRule","transform","d","Checkbox","_ref","checked","_ref$id","page","dispatch","points","useDispatch","currentDate","useSelector","getCurrentDate","balanse","getBalance","isLoading","getIsLoading","className","styles","type","disabled","onClick","e","itemId","credentials","date","updateGifts","switchProgress","handleCheckboxChange","readOnly","concat","SVGCheck","SVGExclamation","DaysList","task","taskId","isShow","weekDates","getWeekDates","map","_ref2","index","day","Date","toJSON","slice","isActive","onChange","dayId","_id","data","forEach","item","push","days","activeTask","handleChange","CardListItem","_item$days","_item$_id","_useState","useState","_useState2","_slicedToArray","setIsShow","img","imageUrl","Image","lastGiftBuy","getLastGiftBuy","currentDateGlobal","dayBefore","find","isCompleted","isSelected","reward","price","_Fragment","src","alt","title","CardList","items","_ref$page","Loader","ProgressBar","_useSelector","getRewards","rewardsGained","rewardsPlanned","currentDayName","getCurrentDayName","balance","percent","split","reverse","join","isNaN","AnimatedLineProgressBar","rounded","progressColor","containerColor","getGiftsList","state","gifts","getModal","modalShow","getFilterGiftsList","createSelector","purchasedGiftIds","giftIds","filter","includes","getTasks","tasks","taskList","getFilterTasks","obj","length"],"sourceRoot":""}