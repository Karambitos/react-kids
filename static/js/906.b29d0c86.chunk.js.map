{"version":3,"file":"static/js/906.b29d0c86.chunk.js","mappings":"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","sources":["webpack://react-qa-test/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","webpack://react-qa-test/./src/components/ProgressBar/ProgressBar.module.scss?9d2c","components/ProgressBar/ProgressBar.jsx","webpack://react-qa-test/./src/components/CongratsModal/CongratsModal.module.scss?fa42","components/CongratsModal/CongratsModal.jsx","pages/Awards.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__sVPQZ\",\"modal\":\"Modal_modal__yEgVW\",\"opacity\":\"Modal_opacity__aq1ar\",\"modalInner\":\"Modal_modalInner__EBJXI\",\"button\":\"Modal_button__FFRRp\"};","import styles from './Modal.module.scss';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ handleModalToggle, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', closeOnEscHandler);\n\n    return () => {\n      window.removeEventListener('keydown', closeOnEscHandler);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  function closeOnEscHandler(e) {\n    if (e.code === 'Escape') {\n      handleModalToggle();\n    }\n  }\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleModalToggle();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.backdrop} onClick={handleBackdropClick}>\n      <div className={styles.modal}>\n        <button\n          onClick={handleBackdropClick}\n          className={styles.button}\n        ></button>\n        <div className={styles.modalInner}>{children}</div>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProgressBar_wrapper__2q-FW\",\"currentDayWrapper\":\"ProgressBar_currentDayWrapper__3Qby0\",\"currentDay\":\"ProgressBar_currentDay__09F9o\",\"infoWrapper\":\"ProgressBar_infoWrapper__UC1XU\",\"progressBar\":\"ProgressBar_progressBar__8d4AF\",\"progressBarData\":\"ProgressBar_progressBarData__ffvRN\"};","import { useSelector } from 'react-redux';\nimport { getBalance, getRewards } from '../../redux/auth/selectors';\nimport styles from './ProgressBar.module.scss';\nimport { AnimatedLineProgressBar } from '@frogress/line';\nimport { getCurrentDate, getCurrentDayName } from '../../redux/tasks/selectors';\n\nexport default function ProgressBar() {\n  const { rewardsGained, rewardsPlanned } = useSelector(getRewards);\n  const currentDate = useSelector(getCurrentDate);\n  const currentDayName = useSelector(getCurrentDayName);\n  const balance = useSelector(getBalance);\n  const percent = (rewardsGained / rewardsPlanned) * 100;\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.currentDayWrapper}>\n        My tasks:\n        <span className={styles.currentDay}>\n          {currentDayName && <span>{currentDayName}, </span>}\n          {currentDate.split('-').reverse().join('-')}\n        </span>\n      </div>\n      <div className={styles.infoWrapper}>\n        <p>\n          Total balance: <span>{balance}</span>\n        </p>\n        <p>\n          Points earned this week: <span>{rewardsGained}</span>\n        </p>\n        <p>\n          Points planned for this week: <span>{rewardsPlanned}</span>\n        </p>\n        {percent != NaN && (\n          <div className={styles.progressBar}>\n            <span className={styles.progressBarData}>\n              <span>{rewardsGained}</span>/<span>{rewardsPlanned}</span>\n            </span>\n            <AnimatedLineProgressBar\n              percent={(rewardsGained / rewardsPlanned) * 100}\n              rounded={6}\n              height={6}\n              progressColor=\"#9ECB44\"\n              containerColor=\"#E0E0E0\"\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CongratsModal_wrapper__Gi8ca\",\"title\":\"CongratsModal_title__fCeVe\",\"list\":\"CongratsModal_list__w2wkS\",\"item\":\"CongratsModal_item__b+XkI\"};","import styles from './CongratsModal.module.scss';\nimport Modal from '../Modal/Modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterGiftsList } from '../../redux/gift/selectors';\nimport { updateModalShow } from '../../redux/gift/slice';\n\nexport default function CongratsModal() {\n  const dispatch = useDispatch();\n  const giftsFilter = useSelector(getFilterGiftsList);\n\n  const handleModalToggle = () => {\n    dispatch(updateModalShow());\n  };\n\n  return (\n    <>\n      <Modal handleModalToggle={handleModalToggle}>\n        <div className={styles.wrapper}>\n          <h2 className={styles.title}>Congratulations! You get:</h2>\n          <ul className={styles.list}>\n            {giftsFilter?.map(item => {\n              return (\n                <li key={item.id} className={styles.item}>\n                  <img\n                    src={item.imageUrl}\n                    alt=\"Gift image\"\n                    width=\"90\"\n                    height=\"90\"\n                  />\n                  {item.title}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport CardList from '../components/CardList/CardList';\nimport ProgressBar from '../components/ProgressBar/ProgressBar';\nimport { getGiftsList, getModal } from '../redux/gift/selectors';\nimport { buyGifts } from '../redux/gift/operations';\nimport CongratsModal from '../components/CongratsModal/CongratsModal';\nimport { useDispatch } from 'react-redux';\n\nconst Awards = () => {\n  const gifts = useSelector(getGiftsList);\n  const buttonDisabled = gifts.some(item => item.isSelected === true);\n  console.log(buttonDisabled);\n  const modalIsOpen = useSelector(getModal);\n  const dispatch = useDispatch();\n\n  const handleBuyGifts = () => {\n    const giftIds = [];\n    gifts.forEach(element => {\n      element.isSelected && giftIds.push(element.id);\n    });\n    dispatch(buyGifts(giftIds));\n  };\n  return (\n    <>\n      <div className=\"contentMaxWidth\">\n        <div className=\"pageWrapper\">\n          <ProgressBar />\n          <CardList items={gifts} page={'awards'} />\n          <button\n            className=\"button\"\n            disabled={!buttonDisabled}\n            onClick={handleBuyGifts}\n          >\n            confirm\n          </button>\n          {modalIsOpen && <CongratsModal />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Awards;\n"],"names":["modalRoot","document","querySelector","Modal","_ref","handleModalToggle","children","closeOnEscHandler","e","code","useEffect","window","addEventListener","removeEventListener","handleBackdropClick","target","currentTarget","createPortal","_jsx","className","styles","onClick","_jsxs","ProgressBar","_useSelector","useSelector","getRewards","rewardsGained","rewardsPlanned","currentDate","getCurrentDate","currentDayName","getCurrentDayName","balance","getBalance","percent","split","reverse","join","NaN","AnimatedLineProgressBar","rounded","height","progressColor","containerColor","CongratsModal","dispatch","useDispatch","giftsFilter","getFilterGiftsList","_Fragment","updateModalShow","map","item","src","imageUrl","alt","width","title","id","gifts","getGiftsList","buttonDisabled","some","isSelected","console","log","modalIsOpen","getModal","CardList","items","page","disabled","giftIds","forEach","element","push","buyGifts"],"sourceRoot":""}