{"version":3,"file":"static/js/375.63be54d7.chunk.js","mappings":"wLAAe,SAASA,EAAcC,GAAgB,IAAbC,EAAQD,EAARC,SACvC,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,SAAEA,GAChC,C,kCCDA,EAA0B,0BAA1B,EAA8D,0BAA9D,EAAiG,yBAAjG,EAAsI,4B,UCKvH,SAASG,IACtB,IAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAMXC,GAAWC,EAAAA,EAAAA,eAAc,CAC7BC,MAAO,wBAGT,OACEZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UACpBC,EAAAA,EAAAA,KAAA,MAAIC,UAAWY,EAAed,SAC3BO,EAAUQ,KAAI,SAAAhB,EAAgBiB,GAAW,IAAxBC,EAAGlB,EAAHkB,IAAKC,EAAInB,EAAJmB,KACrB,OACEjB,EAAAA,EAAAA,KAAA,MACEC,UACEE,IAAgBc,EAAI,GAAAC,OACbL,EAAa,KAAAK,OAAIL,GAAc,GAAAK,OAC/BL,GACRd,UAGDC,EAAAA,EAAAA,KAAA,UACEC,UAAWY,EACXM,QAAS,kBAvBH,SAAAF,GAClBT,GAASY,EAAAA,EAAAA,IAAWH,GACtB,CAqB6BI,CAAYJ,EAAK,EAAClB,SAEhCW,EAAWM,EAAIM,MAAM,EAAG,GAAKN,KAN3BD,EAUX,OAIR,C,+DC3CA,EAA0B,qCAA1B,EAAuE,mCAAvE,EAAkH,mCAAlH,EAA8J,oCCK/I,SAASQ,IACtB,IAAMpB,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAChC,OACEmB,EAAAA,EAAAA,MAAA,OAAKvB,UAAWY,EAAed,SAAA,EAC7ByB,EAAAA,EAAAA,MAAA,OAAKvB,UAAWY,EAAad,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACDI,GAAc,IAAIsB,MAAOC,SAASJ,MAAM,EAAG,OAC5CtB,EAAAA,EAAAA,KAAC2B,EAAAA,GAAI,CAACC,GAAG,YAAY3B,UAAWY,EAAcd,SAAC,uBAKnDC,EAAAA,EAAAA,KAAA,OAAKC,UAAWY,EAAad,UAC3BC,EAAAA,EAAAA,KAAA,OAAK6B,IAAKC,EAAIC,IAAI,iBAI1B,C,cCIA,EAlBa,WACX,IAAM5B,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B2B,GAAgB5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAClC,OACET,EAAAA,EAAAA,MAAA,OAAKvB,UAAU,+BAA8BF,SAAA,EAC3CC,EAAAA,EAAAA,KAACE,EAAQ,CAACC,YAAaA,KACvBqB,EAAAA,EAAAA,MAAC3B,EAAc,CAAAE,SAAA,EACbC,EAAAA,EAAAA,KAACkC,EAAAA,EAAW,IACXF,EAAcG,OAAS,GACtBnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CAACC,MAAOL,KAEjBhC,EAAAA,EAAAA,KAACuB,EAAmB,SAK9B,C","sources":["components/WeekTabContent/WeekTabContent.jsx","webpack://react-qa-test/./src/components/WeekTabs/WeekTabs.module.scss?0dd7","components/WeekTabs/WeekTabs.jsx","webpack://react-qa-test/./src/components/CardListPlaceholder/CardListPlaceholder.module.scss?144e","components/CardListPlaceholder/CardListPlaceholder.jsx","pages/Home.jsx"],"sourcesContent":["export default function WeekTabContent({ children }) {\n  return <div className=\"main\">{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dayList\":\"WeekTabs_dayList__jvNtW\",\"dayItem\":\"WeekTabs_dayItem__UGp9l\",\"active\":\"WeekTabs_active__hDc5z\",\"dayButton\":\"WeekTabs_dayButton__mDpDR\"};","import { getCurrentDate, getWeekDates } from '../../redux/tasks/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport styles from './WeekTabs.module.scss';\nimport { switchDate } from '../../redux/tasks/slice';\n\nexport default function WeekTabs() {\n  const currentDate = useSelector(getCurrentDate);\n  const weekDates = useSelector(getWeekDates);\n  const dispatch = useDispatch();\n\n  const handleClick = date => {\n    dispatch(switchDate(date));\n  };\n\n  const isMobile = useMediaQuery({\n    query: '(max-width: 1024px)',\n  });\n\n  return (\n    <div className=\"aside\">\n      <ul className={styles.dayList}>\n        {weekDates.map(({ day, date }, index) => {\n          return (\n            <li\n              className={\n                currentDate === date\n                  ? `${styles.active} ${styles.dayItem}`\n                  : `${styles.dayItem}`\n              }\n              key={index}\n            >\n              <button\n                className={styles.dayButton}\n                onClick={() => handleClick(date)}\n              >\n                {isMobile ? day.slice(0, 2) : day}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardListPlaceholder_wrapper__EfFUF\",\"inner\":\"CardListPlaceholder_inner__7dXeL\",\"image\":\"CardListPlaceholder_image__FpJy9\",\"button\":\"CardListPlaceholder_button__Cvd8P\"};","import BG from '../../assets/bg.png';\nimport { Link } from 'react-router-dom';\nimport styles from './CardListPlaceholder.module.scss';\nimport { useSelector } from 'react-redux';\nimport { getCurrentDate } from '../../redux/tasks/selectors';\n\nexport default function CardListPlaceholder() {\n  const currentDate = useSelector(getCurrentDate);\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.inner}>\n        <h2>No tasks on this day</h2>\n        {!(currentDate < new Date().toJSON().slice(0, 10)) && (\n          <Link to=\"/planning\" className={styles.button}>\n            Schedule tasks\n          </Link>\n        )}\n      </div>\n      <div className={styles.image}>\n        <img src={BG} alt=\"Alt text\" />\n      </div>\n    </div>\n  );\n}\n","import CardList from '../components/CardList/CardList';\nimport WeekTabContent from '../components/WeekTabContent/WeekTabContent';\nimport WeekTabs from '../components/WeekTabs/WeekTabs';\n\nimport { getCurrentDate, getFilterTasks } from '../redux/tasks/selectors';\nimport { useSelector } from 'react-redux';\nimport CardListPlaceholder from '../components/CardListPlaceholder/CardListPlaceholder';\nimport ProgressBar from '../components/ProgressBar/ProgressBar';\n\nconst Home = () => {\n  const currentDate = useSelector(getCurrentDate);\n  const filteredTasks = useSelector(getFilterTasks);\n  return (\n    <div className=\"asideWrapper contentMaxWidth\">\n      <WeekTabs currentDate={currentDate} />\n      <WeekTabContent>\n        <ProgressBar />\n        {filteredTasks.length > 0 ? (\n          <CardList items={filteredTasks} />\n        ) : (\n          <CardListPlaceholder />\n        )}\n      </WeekTabContent>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["WeekTabContent","_ref","children","_jsx","className","WeekTabs","currentDate","useSelector","getCurrentDate","weekDates","getWeekDates","dispatch","useDispatch","isMobile","useMediaQuery","query","styles","map","index","day","date","concat","onClick","switchDate","handleClick","slice","CardListPlaceholder","_jsxs","Date","toJSON","Link","to","src","BG","alt","filteredTasks","getFilterTasks","ProgressBar","length","CardList","items"],"sourceRoot":""}